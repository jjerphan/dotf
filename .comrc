#           ___           ___           ___           ___           ___
#          /\__\         /\  \         /\  \         /\  \         /\__\
#         /:/  /        /::\  \       |::\  \       /::\  \       /:/  /
#        /:/  /        /:/\:\  \      |:|:\  \     /:/\:\__\     /:/  /
#       /:/  /  ___   /:/  \:\  \   __|:|\:\  \   /:/ /:/  /    /:/  /  ___
#      /:/__/  /\__\ /:/__/ \:\__\ /::::|_\:\__\ /:/_/:/__/___ /:/__/  /\__\
#      \:\  \ /:/  / \:\  \ /:/  / \:\~~\  \/__/ \:\/:::::/  / \:\  \ /:/  /
#       \:\  /:/  /   \:\  /:/  /   \:\  \        \::/~~/~~~~   \:\  /:/  /
#  __    \:\/:/  /     \:\/:/  /     \:\  \        \:\~~\        \:\/:/  /
# /\_\    \::/  /       \::/  /       \:\__\        \:\__\        \::/  /
# \/_/     \/__/         \/__/         \/__/         \/__/         \/__/
#
#       Common profile for all shells.
#       Runs on each new shell
#
#       Defines aliases, and others settings
#
# Personnal profile
source $HOME/.myrc 2> /dev/null

# Aliases

## Profiles ✏
export DOTFILES_BARE="$HOME/.dotf"
alias dotf='/usr/bin/git --git-dir=$DOTFILES_BARE --work-tree=$HOME'
alias br="vim $HOME/.bashrc && source $HOME/.bashrc"
alias zr="vim $HOME/.zshrc && source $HOME/.zshrc"
alias xr="vim $HOME/.xonshrc"
alias mr="vim $HOME/.myrc && source $HOME/.myrc"
alias co="vim $HOME/.comrc && source $HOME/.comrc"
alias vr="vim $HOME/.vimrc"
alias tmcf="vim $HOME/.tmux.conf"

# To have aliases expansion when using watch
alias watch='watch '
alias wa='watch -n 1 '

# Programs
alias v="vim "
alias nv="nvim "
alias b="bat "
alias c="cd "
alias m="less "
alias o="open"
alias toclip="xclip -selection c "
alias shck="shellcheck"
alias h="helm"
alias dea="deactivate"
alias mk="minikube "
alias today="date -u +'%Y-%m-%d'"

## Python
alias p="python "
alias ipy="ipython "
export VENVS_FOLDER="$HOME/.virtualenvs"
mkdir -p $VENVS_FOLDER

### To quickly change the venv
function s() {
    deactivate 2> /dev/null
    source $VENVS_FOLDER/$1/bin/activate
}

## Docker 🐳
# List images without Kubernetes fixtures
alias di='docker images | grep -v "kube" | grep -v "k8s"'
alias drmi='docker rmi '
alias drmiall='docker rmi $(docker images -a --filter=dangling=true -q)'
alias drmca='docker rm $(docker ps --filter=status=exited --filter=status=created -q)'
alias drmin="docker images -a | grep '^<none>' | awk '{print $3}' | xargs docker rmi -f"

alias dlsc="docker ps -a"
alias drmc="docker container rm "
alias dc="docker-compose "

# Force delete containers
alias dbomb="docker container rm \$(docker ps -aq) -f"

docker-bash() {
    docker run -it $1 /bin/bash
}

# Compile LaTeX docker via Docker
alias docomp="docker run -v $(pwd):/home -it -w=/home jjerphan/latex-render make"

# Speedtest
alias speedtest="curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -"

## Kubernetes ☸️
alias k="kubectl"

## Pods
alias klsp="kubectl get pods"
alias kdsp="kubectl describe pods"
alias krmp="kubectl delete pods"
alias krmcp="kubectl get pods | grep Completed | awk '{print \$1}' | xargs kubectl delete pod"

## Jobs
alias klsj="kubectl get jobs"
alias kdsj="kubectl describe jobs"
alias krmj="kubectl delete jobs"

## Services
alias klss="kubectl get services"
alias kdss="kubectl describe services"
alias krms="kubectl delete services"

## Deployments
alias klsd="kubectl get deployments"
alias kdsd="kubectl describe deployments"
alias krmd="kubectl delete deployments"

# Nodes
alias klsn="kubectl get nodes"
alias kdsn="kubectl describe nodes"

# Personnal scripts
export SCRIPTS_FOLDER=$HOME/.scripts
export PATH=$PATH:$SCRIPTS_FOLDER

# Folder for projects
export DEV_FOLDER=$HOME/dev

# Folders shortcut
alias tmp="cd /tmp"
alias sc="cd $SCRIPTS_FOLDER"
alias dl="cd $HOME/Downloads"
alias doc="cd $HOME/Documents"
alias dev="cd $DEV_FOLDER"

## Command to display a random manual page
function randoman() {
   man $(man -k . | shuf -n1 | awk '{print $1}')
}

## Command to clone distant git repo hosted on GitHub
ghcl() {
    repo=$1
    git clone git@github.com:$repo.git
}

## Command to clone distant git repo hosted on UTC Gitlab instance
glcl() {
    repo=$1
    git clone git@gitlab.utc.fr:$repo.git
}

## Generate UML class digramm from code
touml() {
    pulm $1 | plantuml -p > $2
}

## Returns size in bytes
size() {
   wc -c < $1 | xargs
}

## Get cheat sheet of page
cheat() {
    curl cheat.sh/$1
}

## Just fix things with The Fuck
fix () {
    TF_PYTHONIOENCODING=$PYTHONIOENCODING;
    export TF_SHELL=zsh;
    export TF_ALIAS=fuck;
    TF_SHELL_ALIASES=$(alias);
    export TF_SHELL_ALIASES;
    TF_HISTORY="$(fc -ln -10)";
    export TF_HISTORY;
    export PYTHONIOENCODING=utf-8;
    TF_CMD=$(
        thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@
    ) && eval $TF_CMD;
    unset TF_HISTORY;
    export PYTHONIOENCODING=$TF_PYTHONIOENCODING;
    test -n "$TF_CMD" && print -s $TF_CMD
}
